name: build

on:
  push:
    branches: [ main ]   # only pushes to main create the dev tag

permissions:
  contents: read
  packages: write        # required to push to ghcr.io with GITHUB_TOKEN

env:
  REGISTRY: ghcr.io
  IMAGE: ${{ github.repository }}   # e.g. kaelemc/clab-tailscale

jobs:
   build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 1 }

      - name: Set up QEMU (for arm64)
        uses: docker/setup-qemu-action@v3
        with:
          platforms: arm64

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Build & push single-arch images (sequential)
      - name: Build & push amd64 (tagged)
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE }}:dev-amd64
          provenance: false
          sbom: false

      - name: Build & push arm64 (tagged)
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/arm64
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE }}:dev-arm64
          provenance: false
          sbom: false

      # Create and push the multi-arch manifest as :dev
      - name: Create & push :dev manifest
        run: |
          set -euo pipefail
          IMAGE="${{ env.REGISTRY }}/${{ env.IMAGE }}"
          docker buildx imagetools create \
            -t "${IMAGE}:dev" \
            "${IMAGE}:dev-amd64" \
            "${IMAGE}:dev-arm64"

      # Optional: show what got published
      - name: Inspect :dev
        run: docker buildx imagetools inspect ${{ env.REGISTRY }}/${{ env.IMAGE }}:dev